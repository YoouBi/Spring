ctrl+shift+ESC를 누르면 윈도우라는 OS가 프로세스를 보여주고 있음
다 독립적으로 동작하고 있는데 오른쪽에 보면 이 프로세스가 컴퓨터의 자원을 얼만큼 쓰고 있는지 나옴
컴퓨터의 기계 장치 중 하나인 CPU라는 녀석이 프로그램의 흐름에 대해서 연산을 하고 있다
CPU가 대체 몇개가 있길래 이 많은 프로그램을 동작시킬 수 있는가하면
성능에서 CPU를 보면 화면이 여러개 뜰건데 8개가 뜨면(코어 8) 연산을 할 수 있는 기계 장치가 8개가 있다는 것
이게 싱글 코어 듀얼 코어 하던 것
속도는 클락 스피드를 말하는데 정기적인 신호가 왔다갔다하는걸 헤르츠라고 하는데
1초에 기가헤르츠가 왔다갔다하는 엄청나게 빠른 속도로 196개의 프로세스를 작동시키니까
동시에 작동하는 것처럼 느껴지는 것
실제로는 동시에 8개밖에 못하는것이지만 작업을 분배해서 순식간에 처리하고 넘어감
이 프로그램이라는 것들이 여러개의 흐름을 가질 수 있음
예를 들어서 우리가 만들어놓은 웹 어플리케이션을 생각해보자
톰캣에 웹 어플리케이션을 만들었었는데 한명의 접속자가 생기면 하나의 흐름이 생긴다고 했다
그런데 이 흐름이 한개밖에 만들어지지 않으면
사람 한명이 접속해서 요청 처리가 발생하고 있는 도중에는 다른 접속자가 생겼을 때 못쓰는 상황이 생길 것이다
이렇듯 동시에 여러가지 흐름을 만들어내는 걸 쓰레드, 멀티 쓰레드라는 작업을 만들어서
동시성이 있는 프로그래밍을 할 수 있다
목적은 사용자에게 사용하기 편한 환경을 만들어주는 것이다
두번째 목적은 컴퓨터라는 친구가 코어가 옛날에는 싱글코어였다가 8개로 늘어난것처럼 계속 발전하고 있다
이 싱글 코어라는 친구를 무지무지하게 빠르게 만들면 8개까지도 필요가 없을 것이다
이 속도라는 걸 올리려고하면 어떤 작업을 이뤄야하냐면 이 신호가 왔다갔다하는걸 빠르게 해야한다
이 신호 속도를 올리면 된다는 소리인데, 우리가 사용하는 컴퓨터의 신호 속도는 전기 신호여서 신호 자체는 강속에 가깝게 움직인다
그런데 세상에 있는 모든 물체들은 강속을 넘어서 존재할 수 없다고 아인슈타인이 밝혀냈다
속도에 제한이 걸리는 것이다
그럼 어떻게 해야할까? 답은 왔다갔다하는 거리를 짧게 만드는 것이다
이걸 나노 단위로 만드는 것인데 그래서 우리가 듣는 몇 나노 공정이라는게 거리를 짧게 만드는 공정이었던 것
거리를 짧게 만드는 건 쉽냐고 묻는다면 나노 공정을 전자로 움직여야하는데 양자역학의 특징 상 확률적으로 존재하다보니 있어서는 안되는 곳에 있는 것이라 그런걸 삼성이라던지 그런곳에서 처리를 하는 것인데
아무튼 이런걸 무한정으로 작게 만들 수는 없다
전에는 이 전략이 먹혀서 선형적으로 성능 발전이 이루어졌는데 이제는 더이상 먹히지 않을것이다 하는 무어의 예측이 먹혔다
그래서 이제는 기계 1개가지고는 안되네? 해서 성능을 위해 기계를 붙이자 해서 멀티 코어가 생긴 것
이제는 소프트웨어를 만드는 개발자가 빠른 동작을 만들 수 있게끔 고민해야 함
전략이 뭘까? 일꾼이 여러명 있고 일은 빨리 해야한다
일을 잘 나누고 옆에 있는 애한테 영향을 받으면 받을수록 느려지므로 독립적으로 일을 잘 할 수 있는 환경을 만들어줘야한다
그리고 나눈걸 잘 합쳐야한다
이 과정이 잘 안되어있으면 혼자서 일하는 것보다 느려진다
그래서 멀티 쓰레드를 쓴다고해서 무조건 빨라지는 것은 아니고 소프트웨어 개발자들이 잘 조절을 해줘야 빨라지는 것이다
자바에서도 이런 쓰레드 흐름을 만들어낼 수 있다
